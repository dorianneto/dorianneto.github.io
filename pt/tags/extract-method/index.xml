<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>extract method on Dorian Neto</title>
    <link>https://dorianneto.github.io/pt/tags/extract-method/</link>
    <description>Recent content in extract method on Dorian Neto</description>
    <image>
      <url>https://dorianneto.github.io/images/dorianneto-thumbnail.jpg</url>
      <link>https://dorianneto.github.io/images/dorianneto-thumbnail.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>pt</language>
    <copyright>&amp;copy; 2013-2022 Dorian Neto</copyright>
    <lastBuildDate>Tue, 30 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://dorianneto.github.io/pt/tags/extract-method/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Refatorando código com Extract Method</title>
      <link>https://dorianneto.github.io/pt/posts/refatorando-codigo-com-extract-method/</link>
      <pubDate>Tue, 30 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://dorianneto.github.io/pt/posts/refatorando-codigo-com-extract-method/</guid>
      <description>Com certeza você já deve ter visto, ou até mesmo criou, funções ou métodos que possuem diversas responsabilidades. Não é novidade para nenhum de nós que isso não é uma boa prática e que pode causar diversos problemas na estrutura do código.
Existe uma analogia com a Fórmula 1 que aborda esse tipo de problema. Quando um carro faz uma parada (Pit stop), diversas pessoas exercem uma tarefa para que o resultado final do objetivo seja atingido (trocar peças e reabastecer o carro), onde cada uma dessas pessoas possui uma única responsabilidade.</description>
    </item>
    
  </channel>
</rss>
