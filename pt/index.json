[{"content":" Photo credit: @nadir_syzygy - https://unsplash.com/@nadir_syzygy Recentemente me deparei com um comentário de um colega do trabalho em um Pull Request onde ele estava sugerindo a utilização de Yoda Conditions. Faz um bom tempo desde a última vez que ouvi falar sobre esse programming style, por conta disso (e também por eu achar a utilização bastante controvérsia) resolvi escrever um pouco sobre o assunto.\nO que é Yoda Conditions? Yoda Conditions (também conhecido como \u0026ldquo;Yoda Notation\u0026rdquo;) evita problemas gerados por erros de escrita em expressões condicionais de igualdade.\nA aplicação do conceito é bem simples e consiste em inverter a ordem dos valores comparados em uma condição, onde o valor que não pode ser atribuído deve ficar na esquerda e o outro valor na direita, evitando um possível retorno válido inesperado através da criação de um cenário onde um erro será emitido no caso de existir um erro de escrita no operador da condição.\nLembrando que isso vale apenas para determinados tipos de operadores de condição (vamos falar mais sobre isso em instantes).\nYoda Conditions na prática Normalmente, a primeira impressão que se tem ao ler o código abaixo é que isso é muito improvável de acontecer, mas garanto que é mais comum do que se imagina (é só lembrar que um programming style foi criado apenas pra resolver esse tipo de situação hehe).\n1 2 3 4 5 if ($slug = \u0026#39;title-example\u0026#39;) { // A intenção aqui era comparar o valor da variável $slug com a string // \u0026#34;title-example\u0026#34;, mas ao invés disso uma atribuição está sendo feita // e a condição será validada. } Fico imaginando os inúmeros problemas que esse erro simples pode gerar em um sistema. Pensa ai.\nO Yoda Conditions evita exatamente esse tipo de problema:\n1 2 3 4 5 6 7 8 if (\u0026#39;title-example\u0026#39; = $slug) { // Lembra do conceito que vimos minutos atrás? Invertendo os valores // da condição nós estamos criando um cenário onde, se houver um erro // de escrita no operador da condição, um erro será emitido e o problema // da condição ser validada inesperadamente não vai mais existir. } // Output: Parse error: syntax error, unexpected \u0026#39;=\u0026#39; in Standard input code on line X O conceito pode parecer estranho ou confuso, mas entenda isso como uma espécie de hábito adotado para que você não seja surpreendido com uma possível condição validada inesperadamente, salvando seu emprego e sua saúde mental.\nQuando usar? É indicado utilizar Yoda Conditions somente em expressões condicionais de igualdade (==,===,!=,!==), devido a probabilidade ser maior de gerar uma atribuição ao invés de uma comparação quando algum erro de escrita ocorrer.\nNão é indicado a utilização de Yoda Conditions em outros operadores (por exemplo, os relacionais) devido a dificuldade gerada na leitura da expressão.\nExistem vários casos onde a utilização pode parecer confusa, então, vamos abordar alguns dos casos mais comuns:\nCaso 01\n1 2 3 4 5 if (getSlug() == \u0026#39;title-example\u0026#39;) { // Nesse caso a aplicação do Yoda Conditions não é necessária visto que // uma função não pode ter um valor atribuído a ela, ou seja, mesmo que // você cometa um erro de escrita (use = ao invés de ==) um erro será gerado. } Caso 02\n1 2 3 4 5 6 7 8 9 10 if ($products \u0026gt;= 2) { // Lembra do que falamos a respeito de operadores relacionais? } // Imagina só se a gente aplica Yoda Conditions // nesse caso. Veja só como ficaria: if (2 \u0026lt;= $products) { // A leitura fica bem prejudicada. } Caso 03\n1 2 3 4 5 if ($slug == $product-\u0026gt;slug) { // Este é um caso que as vezes gera um pouco de dúvida, mas é bem simples. // Já que os 2 valores comparados são variáveis, inverter a ordem // não vai gerar o efeito que queremos ter ao utilizar Yoda Conditions. } Além disso, é sempre importante verificar se o Yoda Conditions faz parte do code standards do framework, biblioteca, linguagem, etc que você esteja utilizando.\nCom relação ao PHP, existem 2 soluções que são bem conhecidas e que utilizam esse programming style:\nWordpress Symfony Algumas linguagens não possuem a necessidade da utilização do Yoda Conditions (por exemplo, Python), pois não permitem atribuição em condições.\nUsar ou não usar? Após conversar com algumas pessoas sobre o Yoda Conditions, percebi que a decisão é algo mais pessoal do que técnico, então, achei interessante deixar essa decisão com você.\nPorém, um post sem conclusão é meio frustrante, certo? Resolvi então compartilhar minhas reflexões sobre o assunto como uma forma de te ajudar a chegar na resposta dessa pergunta.\nMinhas reflexões Como já estamos cansados de saber, não existe uma bala de prata na programação. Como programadores, devemos entender e analisar bem uma situação para ser capaz de utilizar com segurança aquilo que melhor vai atender, sem nunca esquecer de que não seremos os únicos a utilizar aquele código.\nApesar de resolver um problema bastante específico, Yoda Conditions pode trazer um grande problema para o seu código que é a falta de legibilidade. Os maiores críticos desse programming style utilizam o argumento de que não é viável a utilização devido a trade-off gerado, ou seja, o fato de que para evitar um problema gerado por erro de escrita você precisa alterar a forma natural com que estamos acostumados a comparar valores, tendo como consequência a legibilidade do código prejudicada.\nExiste uma frase muito famosa do Uncle Bob (Robert C. Martin) a respeito disso:\n“I dislike any statement in code that causes the reader to do a double-take. Code that protects the author at the expense of the reader is flawed code.”\nPor considerar legibilidade de código algo essencial no processo de desenvolvimento de um software, tudo isso me faz pensar que alternativas são muito bem vindas (hehe). A alternativa mais simples e conhecida são os testes unitários, pois através deles você consegue garantir que seu código está funcionando da maneira como deveria.\nApesar do post ter ficado longo e um pouco contraditório ao falar sobre uma alternativa ao Yoda Conditions, acho que conseguimos abordar bem o conceito, relembrar alguns pontos importantes sobre nossa profissão e criar boas reflexões.\nEspero que tenha sido útil pra você!\nSe ficou alguma dúvida, se tem alguma sugestão, elogio ou se discordou de algo que eu escrevi, deixa nos comentários!\n","permalink":"https://dorianneto.github.io/pt/posts/usar-ou-nao-usar-yoda-conditions-eis-a-questao/","summary":"Photo credit: @nadir_syzygy - https://unsplash.com/@nadir_syzygy Recentemente me deparei com um comentário de um colega do trabalho em um Pull Request onde ele estava sugerindo a utilização de Yoda Conditions. Faz um bom tempo desde a última vez que ouvi falar sobre esse programming style, por conta disso (e também por eu achar a utilização bastante controvérsia) resolvi escrever um pouco sobre o assunto.\nO que é Yoda Conditions? Yoda Conditions (também conhecido como \u0026ldquo;Yoda Notation\u0026rdquo;) evita problemas gerados por erros de escrita em expressões condicionais de igualdade.","title":"Usar ou não usar Yoda Conditions, eis a questão"},{"content":"Acho curioso o fato de programadores carregarem muitas dores em comum. Ao longo dos anos percebi que muitas das dúvidas e questionamentos que eu tinha sobre o rumo da minha carreira era compartilhado por diversas pessoas que também já tinham tido, estavam tendo ou ainda teriam.\nSei que são vários os motivos, mas hoje quero falar um pouco sobre o apego a linguagens de programação e porque você não deve deixar que isso limite suas oportunidades profissionais.\nUm pouco de história Meu primeiro contato com o mundo da programação foi aos 15 anos através de um grande amigo que me mostrou o processo de montagem de uma tela em HTML/CSS para um trabalho do colégio. Aos 16, durante as férias do colégio, criei a oportunidade de frequentar diariamente a agência do meu tio para estudar mais sobre programação e adquirir experiência com os profissionais de lá. Aos 17 eu já estava \u0026ldquo;estagiando\u0026rdquo; e aos 18 consegui meu primeiro estágio remunerado.\nDurante toda essa trajetória inicial, sempre tive em mente que deveria fazer e seguir o que meus mentores me indicavam. Isso me ajudou bastante a entender rapidamente as diversas possibilidades de atuação e no que eu poderia me especializar.\nDepois de um certo tempo atuando na profissão, me vi seguindo carreira como desenvolvedor PHP. Além da minha própria decisão por seguir por esse caminho, também tive bastante influência dos meus mentores e agradeço eternamente a cada um deles. Me sinto muito realizado por tudo que conquistei e contribui por onde passei.\nE é exatamente nesse ponto que eu queria chegar.\nDesenvolvedor linguagem X Minha intenção não é julgar o fato de se especializar em uma linguagem X, seguir carreira com ela etc, acho até que o fato de ser especialista em alguma coisa é algo que devemos fazer, pois tentar abraçar o mundo com as pernas é bem complicado. Mas voltando ao raciocínio, o que realmente quero abordar aqui é quando essa decisão por seguir uma carreira como desenvolvedor linguagem X limita suas oportunidades profissionais.\nDepois de vários anos me dedicando ao máximo praticamente a uma linguagem, criei um apego muito grande por ela. Acho que esse apego é extremamente natural pelo fato das diversas horas dedicadas ao seu estudo, as diversas conquistas profissionais e pessoais etc, mas nos últimos meses andei percebendo o quanto esse apego estava sendo prejudicial para uma tomada de decisão da minha carreira.\nQuando surgiu uma oportunidade para eu trabalhar com uma outra linguagem, o primeiro sentimento que tive foi medo, muito medo! Medo por achar que não daria conta pelo fato de não estar trabalhando com a linguagem que domino, medo por não conseguir aprender a nova linguagem a tempo e, principalmente, medo por achar que tudo que conquistei ao longo dos anos com o PHP iria por água abaixo pelo simples fato de não mais trabalhar diretamente com a linguagem.\nDurante esse período onde tive que tomar uma decisão sobre qual seria o próximo passo da minha carreira, tive muitos momentos de reflexão, e percebi que a maioria das possibilidades que eu criava eram dependentes de uma linguagem.\nEssa conclusão parece óbvia devido ao meu histórico profissional, mas não seria louco deixar passar uma oportunidade por causa de uma linguagem? Esse foi o questionamento que me fiz e que me fez chegar a conclusão de que eu precisava sair da minha zona de conforto.\nMoral da história Se você visualiza uma oportunidade e entende que aquilo te ajudará a chegar onde você quer, não deixe que uma linguagem te limite.\nO fato de hoje você trabalhar com linguagem Y não apaga tudo que foi conquistado com a linguagem X e não te impede, por exemplo, de continuar contribuindo para projetos na linguagem X, participar de comunidades da linguagem X etc.\nHoje eu entendo que o que realmente nos torna bons programadores não é trabalhar com linguagem X ou Y, e sim seus valores, comprometimento, conhecimento, experiência etc.\nEspero que esse relato possa ajudar aqueles que estão passando pelo mesmo que passei.\nAaa, eu aceitei a oportunidade e estou vivendo um dos melhores momentos da minha carreira profissional e pessoal!\n","permalink":"https://dorianneto.github.io/pt/posts/nao-limite-suas-oportunidades-a-uma-linguagem/","summary":"Acho curioso o fato de programadores carregarem muitas dores em comum. Ao longo dos anos percebi que muitas das dúvidas e questionamentos que eu tinha sobre o rumo da minha carreira era compartilhado por diversas pessoas que também já tinham tido, estavam tendo ou ainda teriam.\nSei que são vários os motivos, mas hoje quero falar um pouco sobre o apego a linguagens de programação e porque você não deve deixar que isso limite suas oportunidades profissionais.","title":"Não limite suas oportunidades a uma linguagem"},{"content":"Com certeza você já deve ter visto, ou até mesmo criou, funções ou métodos que possuem diversas responsabilidades. Não é novidade para nenhum de nós que isso não é uma boa prática e que pode causar diversos problemas na estrutura do código.\nExiste uma analogia com a Fórmula 1 que aborda esse tipo de problema. Quando um carro faz uma parada (Pit stop), diversas pessoas exercem uma tarefa para que o resultado final do objetivo seja atingido (trocar peças e reabastecer o carro), onde cada uma dessas pessoas possui uma única responsabilidade. Agora imagine o caos que seria se ao invés de um grupo de pessoas, apenas um fosse responsável por executar todas as tarefas e consequentemente assumir todas as responsabilidades. É muito claro que a performance seria reduzida drasticamente e a probabilidade de erros durante a execução das tarefas seria bem maior.\nAlém disso, a duplicidade de código é algo que também não é difícil de se ver. Além de ir contra diversos conceitos, paradigmas etc, dificulta a manutenção do código.\nMas será que existe uma forma de resolver tudo isso? Não só existe, como existem várias, e hoje vou abordar a técnica de refatoração Extract Method, que irá nos auxiliar na estruturação de funções (ou métodos) mais legíveis, com uma única responsabilidade e redução da duplicidade de código.\nO que é Extract Method? Extract method é uma técnica de refatoração que tem como principal solução agrupar um trecho de código em uma nova função ou método, a fim de resolver problemas de responsabilidade e/ou duplicidade de código.\n\u0026ldquo;Sério? É só isso?\u0026rdquo;\nSimples né?\nQuero ver isso na prática! Abaixo temos um exemplo didático de uma função que manipula os dados antes de serem inseridos no carrinho de compras. Repare que a função before_add_shopping_cart() possui 2 responsabilidades, que é manipular os dados dos produtos (linha 10 a 17) e disparar um email (linha 20 a 27), e trechos de código duplicado (linha 12 e 16).\nApós analisar o código e compará-lo com as reflexões feitas até agora, é muito claro que esse código clama por refatoração.\nAplicando a técnica Extract Method, chegamos ao seguinte resultado:\nJá que o nosso principal intuito aplicando a técnica é agrupar trechos de código que possam vir a gerar problemas de responsabilidade e duplicidade de código, criamos a função email_to_sales_team() que é responsável apenas por disparar um email e chamamos a mesma na função principal before_add_shopping_cart(), eliminando o problema de múltiplas responsabilidades dentro da mesma. Conseguimos também eliminar o problema de duplicidade de código criando a função format_currency() e chamando a mesma nos locais que era gerado a duplicidade.\nComo resultado final da refatoração nós temos uma função (before_add_shopping_cart()) com uma única responsabilidade e livre de código duplicado, o que torna mais fácil a leitura e manutenção do código. Além disso, conseguiremos utilizar as funções geradas em outras partes do código, tornando nosso código mais otimizado e reutilizável.\nConclusão Apesar de ser uma técnica bem simples, quando aplicada, conseguimos ter ótimos retornos em termos de estruturação do código.\nEntender as técnicas de refatoração existentes nos ajuda não só nos momentos de refatoração, mas também em nosso dia a dia. Pense nisso!\nUtilize essa técnica no seu dia a dia e me conte nos comentários seus resultados!\n","permalink":"https://dorianneto.github.io/pt/posts/refatorando-codigo-com-extract-method/","summary":"Com certeza você já deve ter visto, ou até mesmo criou, funções ou métodos que possuem diversas responsabilidades. Não é novidade para nenhum de nós que isso não é uma boa prática e que pode causar diversos problemas na estrutura do código.\nExiste uma analogia com a Fórmula 1 que aborda esse tipo de problema. Quando um carro faz uma parada (Pit stop), diversas pessoas exercem uma tarefa para que o resultado final do objetivo seja atingido (trocar peças e reabastecer o carro), onde cada uma dessas pessoas possui uma única responsabilidade.","title":"Refatorando código com Extract Method"},{"content":"Escrever código elegante e legível é um dos nossos objetivos diariamente, porém, infelizmente isso não ocorre na maioria das vezes. Pressão para entrega de features, cansaço etc, são alguns dos vários fatores que podem contribuir para que esse objetivo não seja alcançado.\nAo longo dos anos, diversos conceitos de boas práticas foram documentados e quando aplicados em nosso dia a dia facilitam conquistar esse objetivo.\nHoje quero abordar um conceito que irá te transformar em um ninja das funções, fazendo com que seu código fique mais rápido (like a ninja!), legível e fácil de manter!\nEarly Return: Conceito e Benefícios O princípio deste conceito diz que você deve se preocupar em retornar o resultado da função o quanto antes, ou seja, você irá estruturar o código da função de forma que retorne o mais rápido possível o valor esperado.\nE quais são os benefícios para o código?\nAumento da legibilidade; Aumento da performance; Facilita a manutenção; Previne Bugs; Quero ver isso na prática! Irei utilizar o código abaixo (retirado da lib de integração em PHP do pagseguro) como exemplo para entendermos na prática a aplicação do conceito.\n1 2 3 4 5 6 7 8 9 10 11 12 public static function formatDate($date) { $format = DateTime::ATOM; if ($date instanceof DateTime) { $d = $date-\u0026gt;format($format); } elseif (is_numeric($date)) { $d = date($format, $date); } else { $d = (string) $date; } return $d; } Apesar de não ser um código tão complexo, sua legibilidade fica um pouco prejudicada devido ao uso do else if e else, podendo também refletir de forma prejudicial na manutenção.\nExiste muita discussão sobre a utilização de else if e else. Eu particularmente evito utilizar pois acho que não traz legibilidade para o código. Além disso, na maioria das vezes a utilização abre portas para o uso de outras condições aninhadas, o que pode prejudicar ainda mais a legibilidade e manutenabilidade do código. Claro que existem momentos que é necessário a utilização, mas evito sempre que posso.\n\u0026ldquo;E como podemos melhorar?\u0026rdquo;\nAplicando o conceito do Early Return no código obteremos o seguinte resultado:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 public static function formatDate($date) { $format = DateTime::ATOM; if ($date instanceof DateTime) { return $date-\u0026gt;format($format); } if (is_numeric($date)) { return date($format, $date); } return (string) $date; } Removendo o else if e else conseguimos aumentar a legibilidade do código, e logo depois, aplicamos o conceito de Early Return, estruturando o código de forma que retorne o mais rápido possível o valor esperado. Com isso, conseguimos melhorar também a manutenabilidade do código e, consequentemente, prevenimos possíveis bugs.\n\u0026ldquo;Blz, o ganho na legibilidade e manutenabilidade eu entendi, mas onde entra o ganho de performance?\u0026rdquo;\nNo código não refatorado a execução iria passar pelas condições com o intuito de encontrar o valor correto e apenas no final da função seria retornado o mesmo. Já no código refatorado nós acabamos com esse problema, pois nos preocupamos em retornar o resultado da função o quanto antes, ou seja, se a primera condição for aceita, retornamos o valor que condiz com a condição e finalizamos a execução da função.\nConclusão Utilizei um exemplo curto de código e de baixa complexidade, mas imagina isso aplicado em um software robusto.\nApesar de ser um conceito bem simples, quando aplicado em nossos hábitos de codificação, podemos ter um resultado bem satisfatório!\nUtilize essa técnica no seu dia a dia e me conte nos comentários seus resultados!\n","permalink":"https://dorianneto.github.io/pt/posts/torne-se-um-ninja-das-funcoes-com-early-return/","summary":"Escrever código elegante e legível é um dos nossos objetivos diariamente, porém, infelizmente isso não ocorre na maioria das vezes. Pressão para entrega de features, cansaço etc, são alguns dos vários fatores que podem contribuir para que esse objetivo não seja alcançado.\nAo longo dos anos, diversos conceitos de boas práticas foram documentados e quando aplicados em nosso dia a dia facilitam conquistar esse objetivo.\nHoje quero abordar um conceito que irá te transformar em um ninja das funções, fazendo com que seu código fique mais rápido (like a ninja!","title":"Torne-se um ninja das funções com Early Return"},{"content":"Me alegra saber que se você está lendo esse texto é porque você é uma das milhares de pessoas que buscam diariamente se tornarem mais produtivas no trabalho, estudos etc.\nPeço desculpas se você veio com o intuito de encontrar uma fórmula para a produtividade e também por te falar isso: Não existe fórmula.\nE se eu te disser que essa tal produtividade está ai dentro de você, pronta para ser libertada, você acredita?\nVamos falar rapidamente do conceito Consultando nosso bom e velho amigo Wikipedia, temos o seguinte significado:\n\u0026ldquo;A produtividade é basicamente definida como a relação entre a produção e os factores de produção utilizados. A produção é definida como os bens produzidos(quantidade de produtos produzidos). Os fatores de produção são definidos como sejam pessoas, máquinas, materiais e outros. Quanto maior for a relação entre a quantidade produzida por fatores utilizados maior é a produtividade.\u0026rdquo;\nTrazendo esse conceito para nossa realidade como programadores, podemos definir que:\n\u0026ldquo;Quanto mais rápido se codifica e entrega soluções, maior é a produtividade.\u0026rdquo;\nE não podemos esquecer que em paralelo temos que conseguir contribuir para 2 projetos no github, ler 3 artigos, acompanhar newsletters, estudar o novo release recém lançado do framework e tem que sobrar aquele tempo precioso pra escutar um podcast. No final das contas você consegue entregar uma feature, ler 1 artigo e ainda vai dormir frustrado.\nBrincadeiras a parte, mas se pararmos para refletir um pouco, nós somos os responsáveis diretos pelos bloqueios da nossa produtividade.\nEntão eu devo desacelerar? Na minha humilde opinião e experiência, para que você se torne mais produtivo, sim.\nDesde muito pequeno somos ensinados que precisamos produzir muito (e com qualidade) para nos destacarmos como bons profissionais, logo, podemos concluir que grande parte das pessoas já teve seu contato com a produtividade. O grande problema é que muitos de nós carrega conceitos deturpados sobre o assunto devido a inúmeros fatores da vida, e ao invés de tentar solucionar, entramos em guerra interna através de cobranças desumanas, crises da síndrome do impostor e todas as outras mazelas da nossa amada profissão.\nO fato de dar uma desacelerada não significa produzir menos, e sim produzir mais com inteligência. Não significa que ao diminuir a quantidade de tarefas no dia vai fazer com que você produza menos, pelo contrário, você vai conseguir direcionar melhor sua atenção para realizar uma determinada tarefa que foi pensada para aquele momento por um motivo estratégico. Sua mente descansada produz mais, produzindo mais com inteligência e leveza você se torna mais produtivo.\nTá sentindo a produtividade dentro de você? Calma que é perigoso deixar ela se libertar sem antes a gente falar sobre como descansar a mente em meio a tanta coisa que temos pra fazer.\nFala logo maxu! Todo esse processo faz parte de uma mudança de hábito, e como sabemos, hábitos não são tão simples de serem modificados. Mas também não é impossível.\nA partir do momento que você decidiu desacelerar, é inevitável que você fique ansioso por acreditar que esta produzindo menos do que antes, e é ai que a gerência do tempo entra pra te ajudar nesse processo!\nQuando delegamos responsabilidades nos libertamos de certas preocupações que julgamos que uma outra pessoa ou serviço possa resolver por nós, logo, nossa mente fica livre de certas preocupações, e como consequência, também mais descansada.\nTarefa de casa Como solução para delegar o controle do seu tempo, encontre uma ferramenta de calendário (sugiro o Google Calendar) onde você poderá organizar semanalmente os seus afazeres. Não precisa detalhar exatamente como vai fazer, tente ser o mais generalista possível. Por exemplo, se tiver 3 implementações para fazer no sistema em um dia de trabalho, coloque no calendário apenas um evento chamado trabalho definindo o horário de entrada e saída, e as implementações você detalha na ferramenta que já utiliza para gestão de tarefas. Isso vale para qualquer tipo de evento no seu dia, como por exemplo: contribuições no projeto X, reunião com amigos, estudo de um framework, leitura de um artigo, eventos etc.\nPerceba que a partir do momento que você começar a ter o controle do que precisa fazer durante toda a semana sua mente se liberta de preocupações futuras, além disso, você vai conseguir ter uma noção da sua real carga de afazeres e poderá tirar diversas conclusões.\nJá consegue imaginar o quanto sua vida ficará mais leve após colocar isso prática?\nPronto, agora deixe que a produtividade se liberte! Tudo descrito acima foi fruto de inúmeras tentativas frustradas na minha busca pela produtividade até eu aprender que nem tudo na vida existe fórmula, e sim muito trabalho e força de vontade para ser o que você deseja ser. Claro que a mudança não é fácil e o caminho é longo, mas no final tudo flui de uma forma assustadora! Lembre-se também que você estará em um processo de mudança de hábito, então, não dê brecha para distrações, mantenha o foco.\nQuero deixar bem claro de que não estou invalidando os inúmeros artigos, métodos, conceitos, estudos, estudiosos etc espalhados na internet sobre o assunto, até porque tudo isso faz parte do processo de aprendizado e construção da base de conhecimento, porém, algumas coisas só funcionam mesmo quando você começa a pensar fora da caixa.\n","permalink":"https://dorianneto.github.io/pt/posts/liberte-a-produtividade-que-existe-em-voce/","summary":"Me alegra saber que se você está lendo esse texto é porque você é uma das milhares de pessoas que buscam diariamente se tornarem mais produtivas no trabalho, estudos etc.\nPeço desculpas se você veio com o intuito de encontrar uma fórmula para a produtividade e também por te falar isso: Não existe fórmula.\nE se eu te disser que essa tal produtividade está ai dentro de você, pronta para ser libertada, você acredita?","title":"Liberte a produtividade que existe em você!"},{"content":"Quem me acompanha sabe que sempre tive uma vontade muito grande de ter a tão sonhada ZCPE (Zend Certification PHP Engineer), e é com muita alegria que anuncio que consegui!\nApós essa conquista, decidi compartilhar um guia de sobrevivência para quem quer se tornar um ZCPE ou ZCE, onde irei descrever um passo a passo de como você deve se preparar para conseguir sobreviver a essa certificação.\nVamos nessa!\nO exame é difícil? Antes de comentar sobre o guia decidi iniciar com essa pergunta, pois muita gente acaba tomando decisões baseadas nas dificuldades que a mesma possui, e também porque é sempre a primeira pergunta que me fazem.\nAprendi que não existe exame difícil, existe o exame de quem se preparou e o de quem não se preparou. Sei que essa afirmação pode soar um pouco presunçosa, mas tente enxergar pelo lado de que você pode conseguir o que você quer, basta se preparar.\nO exame possui um nível intermediário/avançado, e mesmo as questões consideradas \u0026ldquo;fáceis\u0026rdquo; se tornam complexas, pois exigem um conhecimento profundo da linguagem. É composto por 70 questões com 90 minutos de duração, logo, você possui cerca de 1 minuto e 28 segundos pra cada questão. O controle do tempo é essencial pra realização de um exame tranquilo e a possibilidade de marcar questões para revisão ajuda muito. As questões variam em abertas e fechadas, onde nas fechadas pode ocorrer de ter 2 ou mais opções corretas (fique tranquilo que é mencionado no enunciado a quantidade de opções corretas que devem ser marcadas).\nAgora que você tem uma noção das dificuldades e características, vamos ao guia!\nObs: se você não tem paciência para reflexões e gosta de ir direto ao ponto, pule para o passo 04, porém, recomendo fortemente a leitura do guia por completo.\n#01: Deseje a certificação! Acredito que todos que trabalham com alguma linguagem, software, metodologia etc, possuem o interesse de obter uma certificação, seja por reconhecimento, desafio pessoal, upgrade na carreira etc. Comigo não foi diferente.\nClaro que o que foi mencionado anteriormente são motivos relevantes, mas o que mais me motivou foi o desafio pessoal. Isso me ajudou bastante, pois me considero uma pessoa movida a desafios.\nEncontre sua motivação e use como combustível durante todo o processo.\n#02: Encontre pessoas com o mesmo sonho Não existe nada mais enriquecedor do que o compartilhamento de conhecimento, e melhor ainda quando se tem pessoas ao seu redor compartilhando do mesmo sonho.\n\u0026ldquo;Sonho que se sonha só É só um sonho que se sonha só Mas sonho que se sonha junto é realidade\u0026rdquo; Raul Seixas\nDepois de decidir que eu iria tirar a certificação, fui em busca de pessoas que compartilhavam dos mesmos objetivos, interesses etc, e na minha opinião não existe lugar melhor do que comunidade. Isso foi de uma ajuda inexplicável e deixo registrado minha gratidão à todos da comunidade que me ajudaram!\nAcho que muitos já conhecem, mas vale a pena falar sobre a comunidade Rumo à Certificação PHP. É uma comunidade com foco em ajudar pessoas que possuem o interesse em tirar a ZCPE/ZCE. Diariamente são postadas perguntas no modelo dos exames onde você pode responder, tirar dúvidas etc, e ainda possui pessoas que são extremamente educadas, compreensivas e dispostas a tirar qualquer dúvida.\nEstar próximo de pessoas que compartilham o mesmo sonho regenera suas energias e faz com que você adquira conhecimento muito mais rápido, pois o ambiente que você está inserido é extremamente rico de comprometimento, conhecimento, atitude etc.\n#03: Saiba lidar com seu principal inimigo: você! Sabemos que só desejar algo não nos faz ter o que queremos, devemos nos esforçar bastante para conquistar, mas infelizmente, na maioria das vezes, achamos que não estamos preparados, e esse foi o meu principal desafio: eu nunca me achei preparado o suficiente pra realizar o exame. Muitos motivos me levaram a pensar nisso:\n\u0026ldquo;Essa prova é pra mestres sêniors motherfuckers PHP que trabalham com a linguagem há 45293 anos!\u0026rdquo;\nou\n\u0026ldquo;Já pensou se eu não passo?! A negada vai me achar burro.\u0026rdquo;\nMas se tem uma coisa que eu aprendi nessa vida é que se você analisou a situação e concluiu que a mesma te traz benefícios mas você está se bloqueando de alguma forma, a melhor saída é o bom e velho foda-se. Foi isso que eu fiz.\nTenha cuidado! Ao mesmo tempo que isso te faz agir, pode também te prejudicar no futuro, pois no momento do impulso você esquece de todos os medos e angústias que aquilo te traz. Mas é pra isso que os passos anteriores servem.\nÀs vezes achamos que o meio é o responsável por nos bloquear, sabotar etc, mas na maioria das vezes quem faz isso somos nós. Auto-reflexão é tudo!\n#04: Compre o voucher! É engraçado que mesmo depois de se blindar com diversas técnicas o medo sempre volta com força total. Diversos fatores me fizeram pensar e repensar sobre se era o momento ideal para a compra do voucher. Compro ou não compro? Isso me fez adiar como quem adia uma extração de siso.\nAté que em 2016 realizei a compra do voucher. Foi ótimo ter comprado antes de começar a estudar, pois de certa forma me obrigou a agendar o exame e me dedicar aos estudos.\nA compra é bem simples e é feita através do site da Zend. Você tem o prazo de 1 ano para agendar o exame. Na época que eu comprei o voucher saiu por $145 e ainda consegui parcelar pelo PayPal. Hoje em dia está saindo por $195.\nConviver com o medo não é ruim, desde que você saiba usá-lo a seu favor. Se você chegou até aqui é porque viu que está preparado para dar mais este passo, então, crie coragem e compra logo a porra do voucher!\n#05: Agende seu exame! Já li em vários artigos, principalmente relacionados a procrastinação, que uma boa maneira de auxiliar na conquista de uma meta é divulgá-la. Isso faz com que passe de uma meta pessoal para uma meta pública, ou seja, essas pessoas funcionariam como uma espécie de chefes voluntários que iriam te acompanhar e cobrar durante o processo.\nAgendei minha prova para final de Junho de 2017. A prova é agendada através da Pearson VUE, que é a empresa responsável pelos agendamentos dos exames. Indico que realize o cadastro somente após a compra do voucher, pois você irá precisar do ID do mesmo no momento do agendamento. Com o cadastro finalizado, você poderá realizar o agendamento do exame selecionando o local mais próximo e a melhor data e horário.\nFique atento as seguintes dicas:\nAgende seu exame logo após a compra do voucher! Se você deixar pra última hora corre o risco de não conseguir encontrar uma data e/ou horário. Atenção ao selecionar o exame! No meu caso, selecionei o exame 200-550 (ZCPE) que é relacionado ao PHP 5.5, porém, existe o exame 200-710 (ZCE) que é relacionado ao PHP 7.1. Fique atento. Não esqueça de levar 2 documentos com foto, pois é solicitado no momento de realização do exame. O agendamento do exame será sua meta, e após estabelecida é indispensável que se cultive um ambiente saudável e auto-sustentável de cobranças para que a meta mantenha-se viva.\n#06: Plano de estudo! Realizar um bom plano de estudo e organizar todo o material que será utilizado, na minha opinião, é sem dúvidas o segredo pro sucesso.\nComecei organizando os 10 assuntos abordados no exame de acordo com a prioridade que é cobrado na prova, pois assim eu conseguiria saber o que estudar no momento certo. Depois eu comecei a definir meus horários no Google Calendar todo começo de semana, separando no mínimo 4h de estudos dedicados a certificação.\nA necessidade da compra do Study Guide, que hoje está por $19.95, foi algo que me gerou bastante dúvida, mas indico fortemente, pois te guia de uma forma segura e direta.\nOutra coisa que me ajudou bastante foram os diversos simulados que existem espalhados pela internet e as perguntas diárias que são postadas no grupo Rumo à Certificação PHP. Não fique mal se ao realizar alguns questionários e/ou simulados você erre mais do que acerte, isso aconteceu comigo e no primeiro momento é frustrante, pois você se sente menos preparado ainda pra realizar a prova, mas acredite, o momento que você tem pra errar é enquanto está estudando e não existe aprendizado melhor do que errar, pois você pode pesquisar o motivo do erro e aprender com isso. Vale ressaltar uma dica muito importante que recebi na comunidade: é bom sempre ficar alerta nas respostas de questionários e simulados pois nem sempre estão corretas, então, sempre execute o código abordado no enunciado pra se certificar da resposta.\nO conhecimento da linguagem adquirido no dia a dia é extremamente útil, pois acaba se tornando mais um meio de estudo. Uma dica: contribua para algum projeto no github ou comece um, isso vai te ajudar bastante!\nNão posso esquecer de comentar sobre a principal fonte de estudo: php.net. Toda e qualquer dúvida você pode e deve tirar lá. Durante os estudos você irá perceber que as abordagens são bastante específicas e que muita coisa você nem imaginava que existia. Consultar o php.net nessas horas é imprescindível.\nA organização do tempo, um planejamento bem detalhado e executado é a receita para o sucesso!\nFinal feliz (: Sei que não é um processo fácil e muito menos rápido, mas garanto que no final vale a pena todo o esforço!\nEspero que assim como eu, vocês consigam conquistar sua ZCPE ou ZCE e sentir essa sensação incrível que é receber o tão esperado CONGRATULATIONS!\nQualquer dúvida, sugestões, links etc postem nos comentários que terei o maior prazer em responder.\n","permalink":"https://dorianneto.github.io/pt/posts/guia-de-sobrevivencia-de-um-zcpe-zce/","summary":"Quem me acompanha sabe que sempre tive uma vontade muito grande de ter a tão sonhada ZCPE (Zend Certification PHP Engineer), e é com muita alegria que anuncio que consegui!\nApós essa conquista, decidi compartilhar um guia de sobrevivência para quem quer se tornar um ZCPE ou ZCE, onde irei descrever um passo a passo de como você deve se preparar para conseguir sobreviver a essa certificação.\nVamos nessa!\nO exame é difícil?","title":"Guia de sobrevivência de um ZCPE/ZCE"},{"content":"Infelizmente, em muitas ocasiões, nós programadores somos relacionados a experiências ruins, que vão desde projetos inacabados a \u0026ldquo;abandono do barco\u0026rdquo;. Felizmente, essa imagem pode ser melhorada, pois tudo depende das nossas atitudes! E é por isso que estou aqui para compartilhar um dos maiores ensinamentos que tive esse ano:\n\u0026ldquo;Nunca tranque a porta ao sair, e se fizer isso, volte e certifique-se de deixá-la aberta.\u0026rdquo;\nQuem nunca ouviu falar de um colega que saiu que nem um louco da atual empresa pois conseguiu uma oferta melhor? Nessas horas todo o foco e energia se voltam para a nova etapa da vida profissional e tudo que é relacionado, se torna prioridade. Isso não é errado, pois o momento é de total ansiedade (ou até medo) diante dos novos desafios, mas vale lembrar que mesmo em momentos assim nós não podemos esquecer do que passou.\nSei que cada caso é um caso e que muitas vezes a pressão que é imposta é intensa, mas você não deve pensar apenas no momento atual, pois é ai que você irá se diferenciar dos demais. A tendência, quando temos um novo problema, é abandonar os antigos para não nos sobrecarregar, e quando você consegue parar para refletir sobre suas atitudes em momentos que muitos apenas executariam, você mostra que aquilo possui um valor. Isso agrega muito ao seu caráter pessoal e profissional!\nComo falei anteriormente, cada caso é um caso, mas independentemente da situação, você é quem tem o controle das suas atitudes. O caminho que trilhamos para nos tornar bons profissionais é extremamente duro e desafiador, e sozinhos esse caminho fica bem mais difícil, então, sempre que passar por algum lugar deixe as portas abertas.\nConverse, reflita, encontre um equilíbrio, mas não abandone e nem esqueça do que e com quem você passou, pois isso faz parte da sua história.\n","permalink":"https://dorianneto.github.io/pt/posts/cuidado-com-a-porta-ao-sair/","summary":"Infelizmente, em muitas ocasiões, nós programadores somos relacionados a experiências ruins, que vão desde projetos inacabados a \u0026ldquo;abandono do barco\u0026rdquo;. Felizmente, essa imagem pode ser melhorada, pois tudo depende das nossas atitudes! E é por isso que estou aqui para compartilhar um dos maiores ensinamentos que tive esse ano:\n\u0026ldquo;Nunca tranque a porta ao sair, e se fizer isso, volte e certifique-se de deixá-la aberta.\u0026rdquo;\nQuem nunca ouviu falar de um colega que saiu que nem um louco da atual empresa pois conseguiu uma oferta melhor?","title":"Cuidado com a porta ao sair!"},{"content":"Em minhas buscas por aperfeiçoar cada vez mais a forma como eu produzo código, encontrei uma palestra no youtube do @guilhermeblanco falando sobre Object Calisthenics. Infelizmente o vídeo não exibe a palestra por completo, mas pelo fato do assunto ter me interessado bastante, resolvi estudar a fundo para aprender e me sentir confortável em passar o conteúdo para outras pessoas. Abordei esse tema em 2 eventos (Darkmira Tour Fortaleza e PHP com Rapadura em Quixadá) e tive um feedback muito bom!\nDeixo o link dos slides pra quem quiser dar uma olhada:\nFiquem a vontade em postar alguma dúvida sobre o assunto. Terei o maior prazer em responder!\np.s: Caso alguém queira que eu aborde o assunto de forma mais detalhada, é só postar nos comentários que eu faço na hora!\n","permalink":"https://dorianneto.github.io/pt/posts/slides-object-calisthenics/","summary":"Em minhas buscas por aperfeiçoar cada vez mais a forma como eu produzo código, encontrei uma palestra no youtube do @guilhermeblanco falando sobre Object Calisthenics. Infelizmente o vídeo não exibe a palestra por completo, mas pelo fato do assunto ter me interessado bastante, resolvi estudar a fundo para aprender e me sentir confortável em passar o conteúdo para outras pessoas. Abordei esse tema em 2 eventos (Darkmira Tour Fortaleza e PHP com Rapadura em Quixadá) e tive um feedback muito bom!","title":"Slides: Object Calisthenics"},{"content":"Já faz algum tempo que eu estava querendo escrever sobre as novas features do PHP 7, mas esperei para entregar em primeira mão aos guerreiros que foram para o 1º Encontro de desenvolvedores PHP em Fortaleza!\nComo prometi no dia do evento, deixarei disponibilizado o link dos slides.\nEssa nova versão, além de várias novas features, vem trazendo algumas funções modificadas, novas funções, algumas mudanças significativas e uma performance absurda! Existem muitos posts publicados explicando sobre tudo isso, mas nada melhor do que a página do manual do PHP que explica detalhadamente tudo isso.\nPHP 7 http://php.net/manual/en/migration70.php http://php.net/manual/en/migration70.incompatible.php (incompatibilidades com versões anteriores ao PHP 7) http://php.net/manual/en/migration70.new-features.php (novas features) http://php.net/manual/en/migration70.deprecated.php (features depreciadas) http://php.net/manual/en/migration70.changed-functions.php (funções modificadas) http://php.net/manual/en/migration70.new-functions.php (novas funções) http://php.net/manual/en/migration70.classes.php (novas classes/interfaces) http://php.net/manual/en/migration70.constants.php (novas constantes globais) http://php.net/manual/en/migration70.other-changes.php (outras modificações) Além disso, sugiro que você dê uma olhada no RFC da versão PHP 7.1, pois muita coisa já foi aprovada, implementada e depreciada!\nPHP 7.1 (RFC) https://wiki.php.net/rfc#php_71 (implementado) https://wiki.php.net/rfc/deprecations_php_7_1 (depreciado) É sempre bom ficar por dentro de tudo sobre as novas atualizações da linguagem que você trabalha e até mesmo contribuir com a linguagem! Existem muitas áreas e maneiras de contribuição, como a tradução da documentação, propostas para a linguagem, criação de exemplos em páginas da documentação etc. O manual de qualquer linguagem sempre será seu melhor amigo, então, trate-o da melhor maneira possível e contribua sempre!\nUm abraço e até o próximo post!\n","permalink":"https://dorianneto.github.io/pt/posts/php-7-o-que-ha-de-novidades/","summary":"Já faz algum tempo que eu estava querendo escrever sobre as novas features do PHP 7, mas esperei para entregar em primeira mão aos guerreiros que foram para o 1º Encontro de desenvolvedores PHP em Fortaleza!\nComo prometi no dia do evento, deixarei disponibilizado o link dos slides.\nEssa nova versão, além de várias novas features, vem trazendo algumas funções modificadas, novas funções, algumas mudanças significativas e uma performance absurda! Existem muitos posts publicados explicando sobre tudo isso, mas nada melhor do que a página do manual do PHP que explica detalhadamente tudo isso.","title":"PHP 7: O que há de novidades?"},{"content":"Já faz algum tempo que me acostumei a utilizar softwares de servidor web (lamp, xampp, wamp, etc) para meu ambiente de desenvolvimento local e pelo fato de muitos desses softwares utilizarem o apache como servidor web, acabei me acostumando a utilizá-lo. Quando o Nginx foi lançado, tentei utilizá-lo para desenvolvimento local, mas devido a vida louca de entregas e estudos, acabei optando por algo mais rápido e fácil de se configurar e utilizar.\nAté que um dia, tive a necessidade de ter várias versões diferentes do php na minha máquina e pra resolver isso encontrei uma ferramenta que possibilita a utilização de múltiplas versões do PHP com o Apache. Utilizei essa solução por um bom tempo, porém, depois de várias inúmeras formatações do meu notebook e repetitivas instalações do software e da solução, resolvi procurar uma outra alternativa que me gerasse menos trabalho de configuração.\nDepois de tanto pesquisar e pensar, lembrei de ter lido um post, alguns anos atrás, comentando sobre uma feature no PHP 5.4 que a partir daquela versão o PHP teria um servidor web embutido. Rapidamente baixei as versões que mais utilizo em projetos e fui testar.\nLegal, mas como eu uso isso? Obs: Utilizo o ubuntu 14.04, então, os comandos serão voltados para linux. Caso vocês sintam a necessidade de um tutorial para windows ou mac é só pedir nos comentários ;)\nAcesse a área de downloads do site do PHP e faça o download da versão que você deseja utilizar:\n1 $ sudo wget http://br1.php.net/get/php-7.0.4.tar.gz/from/this/mirror obs: Uma dica é utilizar o museu do PHP para baixar outras versões\nDepois de fazer o download, extraia o arquivo e configure-o:\n1 $ sudo ./configure --prefix=/opt/php7.0.3 --with-mysql --with-mysqli --with-openssl --with-pdo-mysql --with-curl O comando ./configure é responsável por informar quais extensões e quais configurações serão compiladas.\nApós configurá-lo, iremos compilar tudo para que você tenha acesso a linguagem, interpretador etc:\n1 $ sudo make Note que até agora, tudo está sendo feito dentro da pasta que você extraiu o PHP e somente após o sucesso da configuração e instalação alguns arquivos serão enviados para a pasta que você escolheu na opção \u0026ndash;prefix (no nosso caso foi a /opt/php7.0.3).\n1 $ sudo make install Agora que você tem o PHP instalado e configurado, vamos criar o link simbólico dentro da pasta global de executáveis para acessar pelo terminal:\n1 $ ln -s /opt/php7.0.3/bin/php php Verifique a versão do php no terminal:\n1 $ php -v Agora é só iniciar o servidor através deste comando:\n1 $ php -S localhost:8080 Lembrando que ao executar o comando, o servidor será iniciado na mesma pasta que você executou o comando. Caso queira iniciar o servidor em outra pasta, utilize a opção **-t **quando for iniciar o servidor:\n1 $ php -S localhost:8080 -t /var/www/html E como eu vejo o Log e utilizo as regras rewrite? Me fiz essa mesma pergunta e foi uma das coisas que me fizeram quase desistir de utilizar essa solução, mas existe uma resposta pra isso.\nO log você pode acompanhar através do terminal, tanto o log de warnings/notices quanto o log de acessos ao servidor. Você também pode configurar via php.ini um arquivo com logs do PHP, onde você terá acesso a tudo (warning, fatal, notice etc).\nCom relação as regras rewrites, é possível inserir um arquivo que fica responsável pelo roteamento do servidor. Nada mais é do que um arquivo PHP que é executado pelo servidor antes de cada requisição. Essa solução serve para utilizar em aplicações que necessitem regras rewrites, como por exemplo uma aplicação que utilize wordpress.\n\u0026ldquo;E eu vou ter que escrever um arquivo para cada aplicação? Meu deus, assim fica sem condições!\u0026rdquo;\nCalma meu jovem, existem scripts de roteamento para todo tipo de framework, cms etc, é só procurar no google. Você também pode utilizar um arquivo de roteamento para cada tipo de aplicação. Veja esse arquivo como um htaccess :)\nSegue um exemplo de como utilizar o roteamento através do comando:\n1 $ php -S localhost:8080 -t /var/www/html /var/www/html/routes/route.php Que negócio estranho\u0026hellip; No começo, pode ser um pouco estranho utilizar isso pelo fato de rodar tudo no terminal (para iniciantes) e também que a maioria dos desenvolvedores PHP foram ensinados desde o início a utilizar um software de servidor web para não perder tempo configurando o ambiente de desenvolvimento e focar no aprendizado da linguagem. Respeito isso e até indico, mas não se limite a fazer sempre a mesma coisa pelo resto da vida, não se acomode, procure sempre aprender o que há de novo e que possa te deixar mais produtivo.\nNão estou aqui para dizer que você deve esquecer o apache, ngnix e outros servidores webs, estou aqui apenas para tentar te ajudar a tornar o seu ambiente de desenvolvimento local mais ágil e mais fácil de configurar :)\nLembrando mais uma vez que a indicação do uso do servidor embutido é apenas para desenvolvimento local por diversas razões, onde a principal é a segurança.\nEspero que possa ter te ajudado!\n","permalink":"https://dorianneto.github.io/pt/posts/servidor-web-embutido-porque-eu-nao-te-usei-antes/","summary":"Já faz algum tempo que me acostumei a utilizar softwares de servidor web (lamp, xampp, wamp, etc) para meu ambiente de desenvolvimento local e pelo fato de muitos desses softwares utilizarem o apache como servidor web, acabei me acostumando a utilizá-lo. Quando o Nginx foi lançado, tentei utilizá-lo para desenvolvimento local, mas devido a vida louca de entregas e estudos, acabei optando por algo mais rápido e fácil de se configurar e utilizar.","title":"Servidor web embutido, porque eu não te usei antes?!"},{"content":"Nesse sábado que passou (16/04), tive o prazer de palestrar no evento Flisol, o maior evento Latino Americano de Instalação de Software Livre.\nO FLISoL é um evento internacional, realizado anualmente, e que ocorre de forma simultânea em diversas cidades da América Latina. O FLISoL é um evento descentralizado, onde diversas comunidades organizam e realizam seu festival, de forma voluntária, tendo como principal objetivo promover o uso de software livre, apresentando sua filosofia, alcance, avanços e desenvolvimento ao público em geral.\nhttp://flisolce.org/\nNa palestra, abordei como tema principal o GitHub, onde falei bastante e incentivei o uso do site como forma de aprendizado, portfólio e contribuição. Porém, não poderia falar de GitHub sem falar de GIT e infelizmente devido ao tempo da palestra, não pude entrar em grandes detalhes sobre Git.\nlink da minha palestra sobre GitHub na @flisolceara 2016 https://t.co/4VQP55EBoG\n\u0026mdash; Dorian Neto (@doriansneto) 18 de abril de 2016 A pedido de muitos, listo alguns links para quem quer iniciar no GIT. Fiquei muito feliz pois quem estava lá entendeu a importância em se trabalhar (e até mesmo estudar) com controle de versão.\nAqui vai os links que mais me ajudaram a iniciar no GIT:\nhttp://rogerdudler.github.io/git-guide/index.pt_BR.html (guia prático mega simples) https://try.github.io/levels/1/challenges/1 (Passo a passo criado pela Code School) https://youtu.be/WVLhm1AMeYE?list=PLInBAd9OZCzzHBJjLFZzRl6DgUmOeG3H0 (créditos ao canal RBTech) https://git-scm.com/book/pt-br/v1 (Livro Pro Git) Lendo e colocando em prática todo o aprendizado gerado pelo conteúdo desses links, você estará pronto para utilizar todos os poderes do GIT e começar a contribuir, versionar seus projetos e criar seus próprios repositórios no GitHub de forma tranquila.\nobs: esses links me ajudaram bastante quando eu comecei a estudar GIT, então, é apenas minha opnião. Caso você tenha outros links para compartilhar, não esqueça de colocar nos comentários ;)\nUm abraço e até o próximo post!\n","permalink":"https://dorianneto.github.io/pt/posts/links-uteis-para-iniciar-no-git/","summary":"Nesse sábado que passou (16/04), tive o prazer de palestrar no evento Flisol, o maior evento Latino Americano de Instalação de Software Livre.\nO FLISoL é um evento internacional, realizado anualmente, e que ocorre de forma simultânea em diversas cidades da América Latina. O FLISoL é um evento descentralizado, onde diversas comunidades organizam e realizam seu festival, de forma voluntária, tendo como principal objetivo promover o uso de software livre, apresentando sua filosofia, alcance, avanços e desenvolvimento ao público em geral.","title":"Links úteis para iniciar no GIT"},{"content":"Lembra quando você aceitou refazer uma área do sistema daquele cliente e quando baixou o projeto viu que o mesmo roda na 5.2 e você só tem a 5.4 instalada? Pois é, esse ódio eu não tenho mais e nem quero que você tenha, pois depois de muito quebrar a cabeça e horas de sono perdidas, vou compartilhar meu momento de extrema felicidade por ter conseguido instalar um ambiente de desenvolvimento com múltiplas versões do PHP rodando!\nObs: Utilizo o ubuntu 12.04, então, os comandos serão voltados para linux. Caso vocês sintam a necessidade de um tutorial para windows ou mac é só pedir nos comentários ;)\nAntes de começarmos, atualize sua máquina 1 2 $ sudo apt-get update $ sudo apt-get upgrade Instale algumas dependências 1 $ sudo apt-get install build-essential Esse comando trás um pacote com várias aplicações para compilar/instalar possíveis aplicações utilizadas por você. Exemplos do que é instalado: pacote make, compilador c++, automake, dentre outras libs.\nNão sei se será seu caso, mas quando compilei o php tive alguns problemas com algumas dependências. Caso você tenha o mesmo problema ou queira se previnir, instale também as seguintes dependências:\n1 $ sudo apt-get install libxml2-dev libcurl4-openssl-dev pkg-config libbz2-dev libpng-dev libmcrypt-dev libapache2-mod-php5 Instale o git 1 $ sudo apt-get install git Instale o LAMP Server (Apache, MySQL e PHP) 1 $ sudo apt-get install lamp-server^ Ao rodar o comando, você deverá inserir sua senha do MySQL e aguardar a instalação. Finalizada a instalação, abra uma aba no seu navegador e acesse http://localhost/.\nVocê verá \u0026ldquo;It Works!\u0026rdquo;\nObs: Não esqueça do circunflexo(^) no final, pois sem ele o comando não irá funcionar.\nPara os curiosos, o acento circunflexo(^) no final do comando é necessário para que o meta-pacote(lamp-server) seja requisitado no tasksel,que é uma ferramenta do debian que permite instalar múltiplos pacotes de softwares.\nAgora é onde a brincadeira começa! O php-farm é um script que permite instalar várias versões do PHP em um mesmo ambiente de desenvolvimento, ou seja, você pode rodar as versões 5.2, 5.3 e 5.4 ao mesmo tempo! Melhor que isso só fazer deploy na sexta às 17h e não ter problemas.\nPara instalar, faça o clone do repositório dentro da pasta /opt/phpfarm:\n1 $ sudo git clone https://github.com/cweiske/phpfarm.git /opt/phpfarm Após a instalação, vamos começar a compilar nossas versões do PHP. Utilizarei a versão 5.4.32 como exemplo, mas você pode baixar qualquer, eu disse QUALQUER versão do PHP pois o php-farm utiliza o Museum PHP como repositório para download das versões.\nCrie um arquivo de configuração personalizado(custom-options-*.sh) para instalar a versão do php desejada\n1 $ sudo nano /opt/phpfarm/src/custom-options-5.4.32.sh E insira essas configurações no arquivo:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #!/bin/bash #gcov=\u0026#39;--enable-gcov\u0026#39; configoptions=\u0026#34;\\ --enable-bcmath \\ --with-mysqli \\ --with-curl \\ --with-gd \\ --enable-calendar \\ --enable-exif \\ --enable-ftp \\ --enable-mbstring \\ --enable-pcntl \\ --enable-soap \\ --enable-sockets \\ --enable-wddx \\ --enable-zip \\ --with-zlib \\ --with-gettext \\ --with-openssl \\ --with-pdo-mysql \\ --with-mcrypt \\ --enable-soap \\ --with-bz2 \\ --with-mysql \\ --with-iconv \\ $gcov\u0026#34; Agora faça a compilação do arquivo\n1 2 $ cd /opt/phpfarm/src $ sudo ./compile.sh 5.4.32 Verificando as versões instaladas Para verificar se a instalação deu certo, rode os seguintes comandos\n1 2 $ /opt/phpfarm/inst/bin/php-5.4.32 -v $ /opt/phpfarm/inst/bin/php-cgi-5.4.32 -v Onde na saída de cada comando deverá ser informado a versão do php(no nosso caso é a 5.4.32) e o Server API(cli e cgi-fcgi respectivamente).\nObs: Todas as versões baixadas através do phpfarm serão instaladas em phpfarm/inst/php-$version/.\nConfigurando nosso apache Habilite o módulo fastcgi\n1 $ sudo a2enmod fastcgi Agora vamos configurar o apache para rodar no FastCGI.\n1 $ sudo nano /etc/apache2/apache2.conf Insira esse trecho antes de Include mods-enabled/*.load\n1 2 FastCgiServer /var/www/cgi-bin/php-cgi-5.4.32 -idle-timeout 240 ScriptAlias /cgi-bin-php/ /var/www/cgi-bin/ Abra o arquivo de configurações do FastCGI\n1 $ sudo vim /etc/apache2/mods-enabled/fastcgi.conf E comente esta linha\n1 FastCgiIpcDir /var/lib/apache2/fastcgi Servidor finalizado, agora vamos preparar nossa estrutura 1 2 $ cd /var/www $ sudo mkdir cgi-bin Para cada versão instalada você deverá criar um arquivo nessa pasta(php-cgi-$version)\n1 2 $ cd cgi-bin $ sudo nano php-cgi-5.4.32 Insira o conteúdo abaixo no arquivo criado\n1 2 3 4 5 6 7 8 9 10 11 #!/bin/bash PHPRC=\u0026#34;/opt/phpfarm/src/php-5.4.32/lib/php.ini\u0026#34; export PHPRC PHP_FCGI_CHILDREN=3 export PHP_FCGI_CHILDREN PHP_FCGI_MAX_REQUESTS=5000 export PHP_FCGI_MAX_REQUESTS exec /opt/phpfarm/inst/bin/php-cgi-5.4.32 Logicamente que para cada arquivo de versão diferente o path do conteúdo terá que ser modificado de acordo com a versão.\nAgora transforme o arquivo em um executável\n1 $ sudo chmod +x /var/www/cgi-bin/php-cgi-5.4.32 Falta apenas configurar nosso maravilhoso VirtualHost Ao criar um arquivo VirtualHost, você terá que inserir um trecho no qual vai criar toda a mágica das múltiplas versões.\nCrie o arquivo do VirtualHost\n1 $ sudo nano /etc/apache2/sites-available/php54.dev Insira esse trecho dentro das tags Directory\n1 2 3 4 5 6 # Trecho da mágica! AddHandler php-cgi .php Action php-cgi /cgi-bin-php/php-cgi-5.4.32 \u0026lt;FilesMatch \u0026#34;\\.php$\u0026#34;\u0026gt; SetHandler php-cgi \u0026lt;/FilesMatch\u0026gt; Você pode pegar esse VirtualHost configurado como exemplo\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \u0026lt;VirtualHost *:80\u0026gt; ServerName php54.dev DocumentRoot /var/www/html/php54 \u0026lt;Directory /var/www/html/php54\u0026gt; Options Indexes FollowSymlinks Includes ExecCGI AllowOverride All Order allow,deny Allow from all Require all granted AddHandler php-cgi .php # Não esqueça de mudar o arquivo quando for criar um novo VirtualHost em outra versão do PHP Action php-cgi /cgi-bin-php/php-cgi-5.4.32 \u0026lt;FilesMatch \u0026#34;\\.php$\u0026#34;\u0026gt; SetHandler php-cgi \u0026lt;/FilesMatch\u0026gt; \u0026lt;/Directory\u0026gt; # Configure os paths do log para não ter erro ao reiniciar o apache #ErrorLog /var/www/test/log/error.log #LogLevel info #CustomLog /var/www/test/log/access.log combined \u0026lt;/VirtualHost\u0026gt; E para finalizar\u0026hellip; Insira o domínio utilizado no VirtualHost no seu arquivo /etc/hosts\n1 $ sudo nano /etc/hosts Ative o VirtualHost criado\n1 $ sudo a2ensite php54.dev Vamos aproveitar e instalar o phpMyAdmin\n1 $ sudo apt-get install phpmyadmin Selecione Apache2 e marque **Yes **para permitir que o phpMyAdmin seja configurado automaticamente. Insira a senha do root do MySQL e depois insira a senha de acesso ao painel.\nAcesse as configurações do Apache\n1 $ sudo nano /etc/apache2/apache2.conf Inclua essa linha no final do arquivo\n1 Include /etc/phpmyadmin/apache.conf E por fim, reinicie o Apache\n1 $ sudo service apache2 restart Acesse http://localhost/phpmyadmin para testar a do phpMyAdmin instalação.\nSerá que deu certo? Crie um arquivo php para verificar se deu certo\n1 $ sudo nano /var/www/html/info.php Insira a função phpinfo() e copie para a pasta /var/www/html/php54\n1 $ sudo cp /var/www/html/info.php /var/www/html/php54/info.php Acesse:\nhttp://localhost\nhttp://php54.dev Lindo né não?\nAgora sente, pare e lembre de todos aqueles momentos difíceis que você passou por não ter um ambiente como esse instalado na sua máquina. Não chore, pois agora você é um desenvolvedor PHP feliz e pronto para qualquer projeto!\nLembrando que para instalar qualquer outra versão, basta executar os mesmos passos.\nUm abraço e até o próximo post!\n#UPDATE - 13/04/2016 Devido a alguns pedidos do tutorial deste post para Windows, indico o link abaixo do canal da Code Education para solução de múltiplas versões PHP no Windows utilizando o servidor embutido do PHP.\nInfelizmente, o PHPFarm não possui suporte para Windows, apenas para sistemas unix, e para resolver isso terei que mexer no compilador do mesmo para que seja possível rodar em ambiente Windows.\nEnquanto não faço isso, sugiro que assistam o vídeo postado acima e qualquer dúvida não hesitem em postar nos comentários abaixo.\nVlw negada ;)\nObs: Pretendo publicar um post essa semana ou na próxima sobre servidor embutido do PHP, que também uma forma de rodar várias versões do PHP e é um ótimo webserver para desenvolvimento local.\n","permalink":"https://dorianneto.github.io/pt/posts/problemas-com-versoes-do-php-nunca-mais/","summary":"Lembra quando você aceitou refazer uma área do sistema daquele cliente e quando baixou o projeto viu que o mesmo roda na 5.2 e você só tem a 5.4 instalada? Pois é, esse ódio eu não tenho mais e nem quero que você tenha, pois depois de muito quebrar a cabeça e horas de sono perdidas, vou compartilhar meu momento de extrema felicidade por ter conseguido instalar um ambiente de desenvolvimento com múltiplas versões do PHP rodando!","title":"Problemas com versões do PHP nunca mais!"},{"content":"Acessei o twitter hoje de manhã e me deparei com o seguinte tweet:\n2015 é O Ano da Certificação PHP! http://t.co/7nCEbKeEiC pic.twitter.com/DMVeV06i0Y\n\u0026mdash; ABRAPHP (@ABRAPHP_Oficial) 11 de março de 2015 Acho que todos os desenvolvedores PHP sabem(ou deveriam saber) a importância que uma certificação ZCPE tem no mercado e também para nosso ego como desenvolvedor, e nada melhor e mais incentivador do que ver vários grupos fortes se juntando para nos incentivar. Abaixo listo alguns links úteis para se manter atualizado e para estudar:\nGrupo Rumo a certificação PHP Diariamente são postadas perguntas de provas passadas para que as pessoas do grupo possam juntos encontrar a resposta, e após um tempo a resposta é postada. Vale muito a pena participar do grupo e divulgar para o máximo de desenvolvedores para que o grupo cresça e possa ajudar mais e mais pessoas.\nlink: https://groups.google.com/forum/?hl=pt-BR#!forum/rumo-a-certificacao-php\nFanpage da campanha A fanpage da campanha criada por ABRAPHP, Rumo a certificação PHP, Zend e NetMX para incentivar desenvolvedores a tirar sua certificação em 2015 é um ótimo canal para acompanhar o andamento da campanha. Eu particularmente irei verificar se existe uma atualização na fanpage todo dia :P\nlink: https://www.facebook.com/2015oanodacertificacao\nGuia de estudo da Zend E por último, nada melhor do que o guia de estudo fornecido pela própria Zend focado na ZCPE. Eu nunca fiz esse guia, mas acredito que seja muito bom para quem já está decidido em tirar sua certificação.\nlink: http://www.zend.com/en/services/certification/php-certification-study-guide\nEstou pronto! E quando você estiver pronto e confiante, basta acessar a página do ZCPE e comprar o Voucher. Para realizar a prova, basta procurar um centro autorizada na sua cidade e marcar a prova.\nlink: http://www.zend.com/en/services/certification/php-5-certification\nQuer mais incentivo que isso?\n","permalink":"https://dorianneto.github.io/pt/posts/a-hora-de-tirar-sua-certificacao-e-agora/","summary":"Acessei o twitter hoje de manhã e me deparei com o seguinte tweet:\n2015 é O Ano da Certificação PHP! http://t.co/7nCEbKeEiC pic.twitter.com/DMVeV06i0Y\n\u0026mdash; ABRAPHP (@ABRAPHP_Oficial) 11 de março de 2015 Acho que todos os desenvolvedores PHP sabem(ou deveriam saber) a importância que uma certificação ZCPE tem no mercado e também para nosso ego como desenvolvedor, e nada melhor e mais incentivador do que ver vários grupos fortes se juntando para nos incentivar.","title":"A hora de tirar sua certificação é agora!"},{"content":"Ultimamente venho utilizando bastante o Laravel para meus projetos pessoais e do trabalho. Sem dúvida é um framework fantástico e nesse período de utilização percebi que não é exagero o que dizem de bom sobre ele.\nHoje venho trazer uma dica bem simples a respeito da utlização do pacote Entrust com namespace. Ao utilizar as classes do entrust (normalmente Permission e Role) com namespace você pode ter dificuldade em fazer com que o Laravel encontre essas classes, resultando no seguinte erro: Class not found.\nQuando tive esse problema achei que um $ composer dump-autoload resolveria o problema, mas me enganei. Tentei resolver o problema de todas as formas possíves, até que fui procurar no Google. Nas pesquisas que fiz, encontrei no Stack Overflow uma dúvida igual a que eu tinha , mas nenhuma resposta me ajudou. Fiz o que me restava: fuçar o código do pacote. Alguns segundos depois de fuçar as pastas e arquivos encontrei a solução !\nA solução Existe um arquivo de configuração dentro da pasta do pacote e nele tem um array com o alias do namespace da classe.\nPara resolver basta inserir o namespace onde a classe se encontra, rodar o dump-autoload e pronto !\nNo início tive um pouco de dificuldade na utilização de namespaces no framework, pois tive que configurar no composer a utilização do autoload da PSR-0, mas depois de tudo configurado fica muito mais organizado e padronizado.\nUm abraço e até o próximo post !\n","permalink":"https://dorianneto.github.io/pt/posts/entrust-class-not-found/","summary":"Ultimamente venho utilizando bastante o Laravel para meus projetos pessoais e do trabalho. Sem dúvida é um framework fantástico e nesse período de utilização percebi que não é exagero o que dizem de bom sobre ele.\nHoje venho trazer uma dica bem simples a respeito da utlização do pacote Entrust com namespace. Ao utilizar as classes do entrust (normalmente Permission e Role) com namespace você pode ter dificuldade em fazer com que o Laravel encontre essas classes, resultando no seguinte erro: Class not found.","title":"Entrust - Class not found"},{"content":"Estava lendo alguns posts em um fórum e acabei me deparando com um dúvida que para iniciantes e até para algumas pessoas experientes é bem comum.\nVocê realmente sabe qual a diferença entre Atribuição e Referência ?\nAtribuição Uma das primeiras coisas que você aprende ao estudar qualquer linguagem de programação é atribuir um valor a alguma variável. Esse processo consiste em copiar um valor para um determinado ponto da memória, onde esse valor será chamado através do nome da variável, que é a forma de identificar o ponto armazenado na memória. Lembrando que esse valor só será modificado ao término da execução do programa ou caso o valor da variável seja modificado em tempo de execução.\nComo mostra o exemplo abaixo, na atribuição nós podemos copiar o valor de uma variável para uma nova variável ou até para a mesma variável.\n1 2 3 4 \u0026lt;?php $a = 5; $a = $a + 7; echo $a; // Será exibido o número 12 Na primeira linha do exemplo acima, atribuímos o valor 5 a variável $a. Já na segunda linha, efetuamos uma soma entre a variável $a (que já foi atribuído o valor 5) e somamos ao número 7, depois, atribuímos um novo valor a variável $a e por último exibimos o valor da variável.\n1 2 3 4 \u0026lt;?php $a = ($b = 3) * 2; echo $a; // Será exibido 6 echo $b; // Será exibido 3 No exemplo acima nós atribuímos o valor 3 a variável $b, depois nós multiplicamos por 2 o valor de $b e atribuímos o resultado a variável $a.\nReferência Se na atribuição nós fazemos a cópia de um valor atribuído a uma variável para um determinado ponto da memória, na referência nós fazemos com que as variáveis apontem para o mesmo local da memória.\nVamos entender melhor no exemplo abaixo.\n1 2 3 4 5 6 7 8 \u0026lt;?php $a = 2; $a =\u0026amp;amp; $b; $b = 4; echo $a; // Será exibido o número 4 echo $b; // Será exibido o número 4 Ao executar o código acima, alguns irão estranhar o valor exibido, pois atribuímos o valor 4 apenas para a variável $b e a variável $a também exibiu o número 4.\nVeja que na linha 1 nós atribuímos o valor 2 a variável $a, logo depois, nós informamos que $a faz referência a $b, ou seja, aponta para o mesmo local da memória. Na linha 4, nós atribuímos o valor 4 para a variável $b, e como as duas variáveis apontam para o mesmo local da memória, o valor da variável $a também é 4.\nPodemos também passar parâmetros por referência:\n1 2 3 4 5 6 7 8 9 \u0026lt;?php function soma(\u0026amp;amp;$var) { $var++; } $a = 2; soma($a); echo $a; // Será exibido o valor 3; Na linha 5 nós atribuímos um valor a variável $a. Na linha 6, passamos o valor de $a como parâmetro na função soma. Mas existe algo de diferente, o parâmetro da função soma está sendo passado por referência, isso quer dizer que o valor que será passado como parâmetro terá seu valor modificado juntamente com o valor do parâmetro, pois agora os 2 estão apontando para o mesmo local da memória, independentemente do escopo.\nFaça um teste, retire o sinal de referência (\u0026amp;) do parâmetro e execute o programa. Você verá que o valor de $a será 2, pois o valor de $a foi passado por parâmetro por meio de atribuição e foi modificado apenas dentro do escopo da função.\nAgora vamos supor que a variável $a não tenha sido criada.\n1 2 3 4 5 6 7 8 \u0026lt;?php function soma(\u0026amp;amp;$var) { $var++; } soma($a); echo $a; // Será exibido o valor 1; Quando um valor é passado por referência sem ter sido criado, o php cria essa variável com o valor null. A mesma coisa acontece para valores atribuídos ou retornados.\nConclusão É sempre bom tentar entender como as coisas funcionam. Atribuição e referência são 2 coisas que usamos todos os dias em nossos trabalhos, e muitas pessoas não sabem como realmente funcionam e nem procuram saber. Estimulem sua curiosidade ;)\nUm abraço e até o próximo post !\n","permalink":"https://dorianneto.github.io/pt/posts/atribuicao-e-referencia-voce-realmente-sabe-o-que-e-e-como-funcionam/","summary":"Estava lendo alguns posts em um fórum e acabei me deparando com um dúvida que para iniciantes e até para algumas pessoas experientes é bem comum.\nVocê realmente sabe qual a diferença entre Atribuição e Referência ?\nAtribuição Uma das primeiras coisas que você aprende ao estudar qualquer linguagem de programação é atribuir um valor a alguma variável. Esse processo consiste em copiar um valor para um determinado ponto da memória, onde esse valor será chamado através do nome da variável, que é a forma de identificar o ponto armazenado na memória.","title":"Atribuição e Referência - Você realmente sabe o que é e como funcionam ?"},{"content":"Vejo muitos desenvolvedores recebendo dados de fontes externas ou até mesmo de fontes internas de uma aplicação e não fazem a devida filtragem desses dados. Mal sabem eles que a não filtragem dos dados pode comprometer seriamente a segurança de uma aplicação, deixando graves brechas para que usuários mal intencionados façam o que quiser.\nE o que é exatamente filtragem de dados ? É o processo onde você irá definir que tipo de dado você espera como retorno.\nVamos supor que você tem uma página que recupera o id de uma notícia via GET e você usa este id para procurar a notícia no banco e retornar seus detalhes, mas você não filtra esse id.\n1 2 3 4 \u0026lt;?php // URI: http://www.seusite.com.br/noticia.php?id=5 $id = $_GET[‘id’]; echo $id; O código acima contém uma grande falha, pois não existe uma filtragem do valor externo (id). Desta forma, um usuário mal intencionado poderá inserir qualquer coisa através da uri, podendo comprometer sua aplicação ou banco de dados. O correto seria filtrar o valor com o seu devido tipo de dado, que nesse caso seria um número inteiro pois estamos lidando com identificadores de registros(id’s).\nAbaixo listarei uma das diversas maneiras de efetuar a filtragem de dados. Falarei mais sobre os outros em futuros posts.\nManipulação de tipos (Type casting). O que é isso ? O PHP é uma linguagem de tipagem fraca, ou seja, não é necessário informar qual o tipo de dado um determinado valor possui pois no processo de interpretação do código o interpretador converte o valor para um determinado tipo de dado.\n1 2 3 4 \u0026lt;?php echo 10 + ‘5 teste’; // Retorna 15 echo 10 + ‘teste 5’; // Retorna 10 echo 10 + ‘teste’; // Retorna 10 No exemplo acima, na primeira linha, vimos que ao tentar somar um inteiro(10) com uma string onde um número inteiro(5) está no começo da string, o interpretador converte a string para inteiro e efetua a soma entre 2 números inteiros(10 e 5). Já na segunda linha, tentamos somar um inteiro(10) com uma string que não possui um inteiro no início, logo, o interpretador considera a string como 0 e efetua a soma(10 e 0). A mesma coisa acontece ao tentar efetuar a soma na terceira linha.\nMas o PHP não te impede de tipar valores, com a manipulação de tipos você pode converter um valor para um tipo de dado de sua preferência.\n1 2 3 4 \u0026lt;?php // URI: http://www.seusite.com.br/noticia.php?id=5 $id = (int) $_GET[‘id’]; var_dump($id); Executando o código acima, você verá que o valor retornado é um inteiro e que se o valor da variável $id não for um número inteiro, a mesma terá o valor 0 como retorno.\nAbaixo listo os tipos de dados permitidos para manipulação:\n(int) ou (interger) (bool) ou (boolean) (float) ou (double) ou (real) (string) (array) (object) (unset) Mais alguns exemplos de manipulação de tipos:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 \u0026lt;?php // Array to Object $array = array( \u0026#39;nome\u0026#39; =\u0026amp;gt; \u0026#39;Dorian Sampaio\u0026#39;, \u0026#39;idade\u0026#39; =\u0026amp;gt; 20, \u0026#39;sexo\u0026#39; =\u0026amp;gt; \u0026#39;Masculino\u0026#39; ); var_dump($array); $object = (object) $array; var_dump($object); echo $object-\u0026amp;gt;nome; echo $object-\u0026amp;gt;idade; echo $object-\u0026amp;gt;sexo; /* ------------------------------ */ // Float to Int $float = 2.3; var_dump($float); $float_to_int = (int) $float; var_dump($float_to_int); /* ------------------------------ */ // Int to Bool $int = 13; var_dump($int); $int_to_bool = (bool) $int; var_dump($int_to_bool); /* ------------------------------ */ // String to Unset $string = \u0026#39;Dorian Sampaio\u0026#39;; var_dump($string); $string_to_unset = (unset) $string; var_dump($string_to_unset); As possibilidades são infinitas ! Use sua imaginação ;)\nConclusão (Manipulação de tipos) Ao usarmos manipulação de tipos passamos segurança e controle ao nosso código, pois o mesmo saberá que tipo de dado aquela determinada tarefa necessita para se executada, e caso o valor não corresponda com o esperado o código também estará preparado para executar alguma ação.\nExistem muitos questionamentos sobre usar ou não usar a manipulação de tipos no PHP por conta do interpretador já fazer esse trabalho para você, eu particularmente uso quando quero ter certeza de que um determinado valor seja do tipo que eu preciso (Exemplo: campo de moeda em um formulário), agora cabe a você encontrar os momentos em que seja necessário usar ou não.\nUm abraço e até o próximo post !\n","permalink":"https://dorianneto.github.io/pt/posts/filtragem-de-dados-introducao-e-manipulacao-de-tipos/","summary":"Vejo muitos desenvolvedores recebendo dados de fontes externas ou até mesmo de fontes internas de uma aplicação e não fazem a devida filtragem desses dados. Mal sabem eles que a não filtragem dos dados pode comprometer seriamente a segurança de uma aplicação, deixando graves brechas para que usuários mal intencionados façam o que quiser.\nE o que é exatamente filtragem de dados ? É o processo onde você irá definir que tipo de dado você espera como retorno.","title":"Filtragem de dados - Introdução e Manipulação de tipos"},{"content":"Sempre tive muita vontade de passar conteúdo para os outros, não importando o meio utilizado. A palestra é algo que eu sempre sonhei mas nunca tive oportunidade de praticar. Por coincidência, a galera do trabalho decidiu que toda sexta feira alguém iria dar uma palestra sobre um determinado assunto, e foi ai que surgiu minha grande oportunidade. Para muitos isso pode soar estranho, mas para mim é apenas o começo de muitas que ainda virão.\nO assunto da palestra são as PSR. Pelo que percebi, poucas pessoas conhecem esses padrões para a PHP. Como tudo que é feito em conjunto, acho que fica mais fácil se seguirmos padrões, e na programação não é diferente. Vale a pena estudar sobre as psr e aplicá-las em seus projetos. No começo é difícil e até um pouco chato, mas depois de um tempo você verá o quão bom foi investir seu tempo em padrões.\nAbaixo estão os slides usados em minha apresentação, neles eu falo um pouco sobre a história das PSR e os links das 3 primeiras PSR traduzidos para português. Espero que estes slides façam com que desperte o interesse em estudar as PSR.\n","permalink":"https://dorianneto.github.io/pt/posts/enfim-minha-primeira-palestra/","summary":"Sempre tive muita vontade de passar conteúdo para os outros, não importando o meio utilizado. A palestra é algo que eu sempre sonhei mas nunca tive oportunidade de praticar. Por coincidência, a galera do trabalho decidiu que toda sexta feira alguém iria dar uma palestra sobre um determinado assunto, e foi ai que surgiu minha grande oportunidade. Para muitos isso pode soar estranho, mas para mim é apenas o começo de muitas que ainda virão.","title":"Enfim minha primeira palestra"},{"content":" \u0026ldquo;Uma longa viagem começa com o primeiro passo.\u0026rdquo;\nÉ com muito prazer e satisfação que dou início a este blog. Sempre tive muita vontade de compartilhar conteúdo por qualquer meio de comunicação, e este foi o meio mais viável que encontrei.\nMinha idéia inicial é postar conteúdo que considero relevante para a formação profissional de um desenvolvedor PHP. Para o futuro, pretendo postar tutoriais de funcionalidades e resolução de erros do dia-a-dia, tutorias/artigos de CSS3, HTML5, Javascript e SQL (MySQL), e em um futuro bem próximo irei postar tutoriais/artigos de desenvolvimento para Firefox OS :)\nEnfim, pretendo utilizar este espaço como uma forma de fixação de conteúdo para mim e também para quem precisa.\nAgradeço a todos que contribuem e contribuíram para esta minha iniciativa.\n","permalink":"https://dorianneto.github.io/pt/posts/hello-world/","summary":"\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;Uma longa viagem começa com o primeiro passo.\u0026rdquo;\u003c/p\u003e\n\u003c/blockquote\u003e","title":"Hello World"},{"content":"2017 COMSOLiD 10 minicurso Minicurso ministrado em 3 dias sobre como desenvolver um sistema de ticket (help desk) usando Laravel Slides: https://slides.com/dorianneto/minicurso-laraticket Repositório: https://github.com/dorianneto/laraticket Demo: http://bit.ly/laraticket-heroku COMSOLiD 10 palestra Palestra sobre minha visão de como a produtividade possui relação com a nossa qualidade de vida Slides: http://slides.com/dorianneto/produtividade-e-qualidade-de-vida-nao-sao-inimigas Esquenta PHPeste palestra Palestra sobre minha visão de como a produtividade possui relação com a nossa qualidade de vida Slides: http://slides.com/dorianneto/produtividade-e-qualidade-de-vida-nao-sao-inimigas RDC Day 2017 - II Encontro de Redes de Computadores palestra Palestra sobre minha visão de como a produtividade possui relação com a nossa qualidade de vida Slides: http://slides.com/dorianneto/produtividade-e-qualidade-de-vida-nao-sao-inimigas PHP com Rapadura in Quixadá palestra Palestra sobre Object Calisthenics Slides: http://slides.com/dorianneto/object-calisthenics PHP com Rapadura in Quixadá workshop Introdução sobre a comunidade DojoCE e realização do Dojo Slides: https://slides.com/dorianneto/encontro-dojoce 3° Encontro DojoCE workshop Introdução sobre a comunidade e realização do Dojo Slides: https://slides.com/dorianneto/encontro-dojoce 2° Encontro DojoCE workshop Introdução sobre a comunidade e realização do Dojo Slides: https://slides.com/dorianneto/encontro-dojoce 1° Encontro DojoCE workshop Introdução sobre a comunidade e realização do Dojo Slides: https://slides.com/dorianneto/encontro-dojoce 2016 Darkmira Tour Fortaleza palestra Palestra sobre Object Calisthenics Slides: http://slides.com/dorianneto/object-calisthenics Wordcamp Fortaleza palestra Palestra sobre as novidades do PHP7 e impactos no Wordpress Slides: http://slides.com/dorianneto/wordpress-e-php-7 Flisol 2016 - Ceará palestra Palestra sobre Github Slides: http://slides.com/dorianneto/github-desenvolva-contribua-e-participe 1° Encontro de Dev\u0026rsquo;s PHP do Ceará palestra Palestra sobre as novidades do PHP7 Slides: http://slides.com/dorianneto/php-7-o-que-ha-de-novidades COMSOLiD 9 palestra Palestra sobre Github Slides: http://slides.com/dorianneto/github-desenvolva-contribua-e-participe 2015 PHP com Rapadura in FCRS workshop Workshop de Git Slides: http://slides.com/dorianneto/controle-de-versao ","permalink":"https://dorianneto.github.io/pt/talks/","summary":"2017 COMSOLiD 10 minicurso Minicurso ministrado em 3 dias sobre como desenvolver um sistema de ticket (help desk) usando Laravel Slides: https://slides.com/dorianneto/minicurso-laraticket Repositório: https://github.com/dorianneto/laraticket Demo: http://bit.ly/laraticket-heroku COMSOLiD 10 palestra Palestra sobre minha visão de como a produtividade possui relação com a nossa qualidade de vida Slides: http://slides.com/dorianneto/produtividade-e-qualidade-de-vida-nao-sao-inimigas Esquenta PHPeste palestra Palestra sobre minha visão de como a produtividade possui relação com a nossa qualidade de vida Slides: http://slides.com/dorianneto/produtividade-e-qualidade-de-vida-nao-sao-inimigas RDC Day 2017 - II Encontro de Redes de Computadores palestra Palestra sobre minha visão de como a produtividade possui relação com a nossa qualidade de vida Slides: http://slides.","title":"Palestras"},{"content":" Olá 👋!\nMe chamo Dorian Neto, tenho 29 anos, sou Brasileiro e nasci e fui criado em Fortaleza, CE. Atualmente, moro em Newfoundland \u0026amp; Labrador, Canadá e trabalho como Engenheiro de Software Sênior na HeyOrca 🐳.\nDesde 2011 me considero uma pessoa realizada ❤️ por trabalhar como desenvolvedor. Dentre os vários pontos que me fascinam na área, resolver problemas de negócio através do planejamento e desenvolvimento de soluções digitais escaláveis, consistentes, concisas e velozes é o que faz meus olhos brilharem ⭐.\nIdealizador do DojoCE Palestrante ZCE 👀 ","permalink":"https://dorianneto.github.io/pt/about/","summary":"Olá 👋!\nMe chamo Dorian Neto, tenho 29 anos, sou Brasileiro e nasci e fui criado em Fortaleza, CE. Atualmente, moro em Newfoundland \u0026amp; Labrador, Canadá e trabalho como Engenheiro de Software Sênior na HeyOrca 🐳.\nDesde 2011 me considero uma pessoa realizada ❤️ por trabalhar como desenvolvedor. Dentre os vários pontos que me fascinam na área, resolver problemas de negócio através do planejamento e desenvolvimento de soluções digitais escaláveis, consistentes, concisas e velozes é o que faz meus olhos brilharem ⭐.","title":"Sobre"}]